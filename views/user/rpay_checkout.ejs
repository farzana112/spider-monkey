<!DOCTYPE html>
<html>
  <head>
    <title>Razorpay Checkout</title>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  </head>
  <body>
    <h3>Razorpay Checkout</h3>
    <p>Please wait while we confirm your order...</p>
    <script>
      var orderId = '<%= order.id %>';
      var options = {
        "key": "rzp_test_M0KcTcmQL92pf4",
        "amount": '<%= order.amount%> ',
        "currency": "<%= order.currency %>",
        "name": "Phone Store",
        "description": "Your product or service description",
        "order_id": orderId,
        "handler": function(response) {
          // Handle successful payment response
          console.log(response);
          verifyPayment(response,order)
        },
        "prefill": {
          "name": "Farzana Naushad",
          "email": "john@example.com",
          "contact": "+919999999999"
        },
        "notes": {
          "address": "Address"
        },
        "theme": {
          "color": "#F37259"
        }
      };
      var rzp1 = new Razorpay(options);
      rzp1.on('payment.failed', function (response){
        // Handle failed payment response
        console.log(response);
      });
      rzp1.open();


      const verifyPayment = async (details) => {
    console.log('hiii');
    try {
        const crypto = require('crypto')
        let hmac = crypto.createHmac('sha256', razorpay.secret_id)
        hmac.update(details['payment[razorpay_order_id]'] + "|" + details['payment[razorpay_payment_id]'])
        hmac = hmac.digest('hex')
        if (hmac == details['payment[razorpay_signature]']) {
            return Promise.resolve()
        } else {
            return Promise.reject("not match")
        }
    } catch (err) {
        return Promise.reject(err)
    }
}

        
  
    </script>
  </body>
</html>
